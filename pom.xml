<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.5.4</version>
        <relativePath/>
    </parent>

    <groupId>com.obsinity.telemetry</groupId>
    <artifactId>obsinity-java-sdk</artifactId>
    <name>obsinity-java-sdk</name>
    <packaging>jar</packaging>
    <version>0.0.2-SNAPSHOT</version>

    <properties>
        <java.version>17</java.version>

        <!-- Libraries -->
        <spring.boot.version>3.5.4</spring.boot.version>
        <otel.version>1.53.0</otel.version>
        <jackson.version>2.19.2</jackson.version>
        <log4j2.api.version>2.25.1</log4j2.api.version>
        <slf4j.version>2.0.17</slf4j.version>
        <aspectjrt.version>1.9.24</aspectjrt.version>
        <lombok.version>1.18.38</lombok.version>

        <!-- Java compilation -->
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>

        <!-- Formatting -->
        <spotless-maven-plugin.version>2.43.0</spotless-maven-plugin.version>
        <spotless-palantir-maven-plugin.version>2.59.0</spotless-palantir-maven-plugin.version>

        <!-- Mutation Testing -->
        <pitest.version>1.17.0</pitest.version>
        <pitest.junit5.version>1.2.1</pitest.junit5.version>

        <!-- JUnit (aligned to avoid PIT launcher mismatch) -->
        <junit.jupiter.version>5.11.3</junit.jupiter.version>
        <junit.platform.version>1.11.3</junit.platform.version>

        <!-- Test plugins -->
        <maven.surefire.plugin.version>3.2.5</maven.surefire.plugin.version>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>com.diffplug.spotless</groupId>
                <artifactId>spotless-maven-plugin</artifactId>
                <version>${spotless-maven-plugin.version}</version>
                <configuration>
                    <java>
                        <includes>
                            <include>src/**/*.java</include>
                        </includes>
                        <cleanthat/>
                        <palantirJavaFormat>
                            <version>${spotless-palantir-maven-plugin.version}</version>
                            <style>PALANTIR</style>
                            <formatJavadoc>true</formatJavadoc>
                        </palantirJavaFormat>
                        <importOrder>
                            <order>java|jakarta,lombok|org,|com.obsinity</order>
                        </importOrder>
                        <indent>
                            <tabs>true</tabs>
                            <spacesPerTab>4</spacesPerTab>
                        </indent>
                        <removeUnusedImports/>
                        <formatAnnotations/>
                        <trimTrailingWhitespace/>
                        <replaceRegex>
                            <name>Remove wildcard imports</name>
                            <searchRegex>import\s+[^\*\s]+\*;(\r\n|\r|\n)</searchRegex>
                            <replacement>$1</replacement>
                        </replaceRegex>
                    </java>
                    <json>
                        <includes>
                            <include>src/**/*.json</include>
                        </includes>
                        <simple>
                            <indentSpaces>2</indentSpaces>
                        </simple>
                    </json>
                    <yaml>
                        <includes>
                            <include>src/**/*.yaml</include>
                        </includes>
                        <excludes/>
                        <jackson/>
                    </yaml>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!-- OTel BOM to manage versions -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.opentelemetry</groupId>
                <artifactId>opentelemetry-bom</artifactId>
                <version>${otel.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Spring Boot core -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>

        <!-- AOP (tests) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- AspectJ runtime (if referenced directly) -->
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
            <version>${aspectjrt.version}</version>
        </dependency>

        <!-- Jackson -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jdk8</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <!-- OpenTelemetry API (SpanKind, Attributes, etc.) -->
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-api</artifactId>
        </dependency>

        <!-- OpenTelemetry SDK: Resource lives here -->
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-sdk-common</artifactId>
        </dependency>

        <!-- OpenTelemetry SDK: EventData, LinkData, StatusData -->
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-sdk-trace</artifactId>
        </dependency>

        <!-- Logging APIs -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j2.api.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-reload4j</artifactId>
            <version>${slf4j.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Tests (Spring Boot starter brings JUnit etc., but we pin these to align for PIT) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-launcher</artifactId>
            <version>${junit.platform.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <profiles>
        <!-- Activate with: mvn -Ppitest clean verify -->
        <profile>
            <id>pitest</id>
            <build>
                <plugins>
                    <!-- Keep normal test runs sane (JPMS off) -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${maven.surefire.plugin.version}</version>
                        <configuration>
                            <useModulePath>false</useModulePath>
                        </configuration>
                    </plugin>

                    <plugin>
                        <groupId>org.pitest</groupId>
                        <artifactId>pitest-maven</artifactId>
                        <version>${pitest.version}</version>
                        <configuration>
                            <coverageThreshold>100</coverageThreshold>
                            <mutationThreshold>90</mutationThreshold>

                            <!-- Verbose to expose real causes if anything breaks -->
                            <verbose>true</verbose>

                            <!-- Common JPMS opens for JDK17+ with Spring/Mockito/ByteBuddy -->
                            <jvmArgs>
                                <jvmArg>--add-opens=java.base/java.lang=ALL-UNNAMED</jvmArg>
                                <jvmArg>--add-opens=java.base/java.lang.invoke=ALL-UNNAMED</jvmArg>
                                <jvmArg>--add-opens=java.base/java.util=ALL-UNNAMED</jvmArg>
                                <jvmArg>--add-opens=java.base/java.time=ALL-UNNAMED</jvmArg>
                            </jvmArgs>

                            <!-- Avoid long classpath issues -->
                            <useClasspathJar>true</useClasspathJar>

                            <!-- Target what to mutate -->
                            <targetClasses>
                                <param>com.obsinity.telemetry.*</param>
                            </targetClasses>
                            <targetTests>
                                <param>com.obsinity.telemetry.*Test</param>
                                <param>com.obsinity.telemetry.*Tests</param>
                            </targetTests>

                            <mutators>
                                <mutator>STRONGER</mutator>
                            </mutators>

                            <threads>4</threads>
                            <timeoutConst>8000</timeoutConst>
                            <outputFormats>
                                <param>HTML</param>
                                <param>XML</param>
                            </outputFormats>

                            <!-- Uncomment if you want to exclude wiring/generated/config -->
                            <!--
                            <excludedClasses>
                                <param>com.obsinity.telemetry.config.*</param>
                                <param>com.obsinity.telemetry.generated.*</param>
                            </excludedClasses>
                            -->
                        </configuration>
                        <dependencies>
                            <!-- JUnit 5 integration for PIT -->
                            <dependency>
                                <groupId>org.pitest</groupId>
                                <artifactId>pitest-junit5-plugin</artifactId>
                                <version>${pitest.junit5.version}</version>
                                <!-- If a stray launcher still leaks in, you can exclude it:
                                <exclusions>
                                    <exclusion>
                                        <groupId>org.junit.platform</groupId>
                                        <artifactId>junit-platform-launcher</artifactId>
                                    </exclusion>
                                </exclusions>
                                -->
                            </dependency>
                        </dependencies>
                        <executions>
                            <execution>
                                <id>mutation-testing</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>mutationCoverage</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
